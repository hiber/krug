<?php

/**
 * @file
 * This is the file description for Krug module.
 *
 * In this more verbose, multi-line description, you can specify what this
 * file does exactly. Make sure to wrap your documentation in column 78 so
 * that the file can be displayed nicely in default-sized consoles.
 */

/**
 * Implements hook_field_formatter_info().
 */
function krug_field_formatter_info() {
  return array(
    'text_media' => array(
      'label' => t('Text Media'),
      'field types' => array('text', 'text_long', 'text_with_summary'),
      'settings' => array('file_view_mode' => 'default'),
    ),
  );
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function krug_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $element = array();

  if ($display['type'] == 'text_media') {
    $entity_info = entity_get_info('file');
    $options = array('default' => t('Default'));
    foreach ($entity_info['view modes'] as $file_view_mode => $file_view_mode_info) {
      $options[$file_view_mode] = $file_view_mode_info['label'];
    }
    $element['file_view_mode'] = array(
      '#title' => t('File view mode'),
      '#type' => 'select',
      '#default_value' => $settings['file_view_mode'],
      '#options' => $options,
    );
  }

  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function krug_field_formatter_settings_summary($field, $instance, $view_mode) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];

  $summary = '';

  if ($display['type'] == 'text_media') {
    $entity_info = entity_get_info('file');
    $file_view_mode_label = isset($entity_info['view modes'][$settings['file_view_mode']]) ? $entity_info['view modes'][$settings['file_view_mode']]['label'] : t('Default');
    $summary = t('File view mode: @view_mode', array('@view_mode' => $file_view_mode_label));
  }

  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function krug_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  $settings = $display['settings'];

  switch ($display['type']) {
    case 'text_media':
      foreach ($items as $delta => $item) {
        preg_match("/\[\[.*?]]/s", $item['value'], $matches);
        if (!empty($matches)) {
          $img             = reset(reset(json_decode(reset($matches))));
          $file            = file_load($img->fid);
          $element[$delta] = media_get_file_without_label($file, $settings['file_view_mode'], array());
        }
      }
      break;
  }

  return $element;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function krug_form_media_add_upload_alter(&$form, &$form_state, $form_id) {
  drupal_add_js(drupal_get_path('module', 'krug') . '/krug.js');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function krug_form_media_format_form_alter(&$form, &$form_state, $form_id) {
  $form['options']['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#size' => 40,
    '#maxlength' => 255,
  );
  $form['options']['alt'] = array(
    '#type' => 'textfield',
    '#title' => t('Alt'),
    '#size' => 40,
    '#maxlength' => 255,
  );
  $form['options']['style'] = array(
    '#type' => 'radios',
    '#title' => t('Layout'),
    '#description' => t('The description appears usually below the radio buttons.'),
    '#options' => array("float:left;" =>"Left", "float:right;" =>"Right"),
    '#default_value' => -1,
  );
}

